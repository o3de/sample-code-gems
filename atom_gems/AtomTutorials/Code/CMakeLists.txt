
o3de_pal_dir(pal_dir ${CMAKE_CURRENT_LIST_DIR}/Platform/${PAL_PLATFORM_NAME} "${gem_restricted_path}" "${gem_path}" "${gem_parent_relative_path}")

# The AtomTutorials.API target declares the common interface that users of this gem should depend on in their targets
ly_add_target(
    NAME AtomTutorials.API INTERFACE
    NAMESPACE Gem
    FILES_CMAKE
        atomtutorials_api_files.cmake
    INCLUDE_DIRECTORIES
        INTERFACE
            Include
    BUILD_DEPENDENCIES
        INTERFACE
           AZ::AzCore
           Gem::Atom_Feature_Common.Public
)

# The AtomTutorials.Private.Object target is an internal target
# It should not be used outside of this Gems CMakeLists.txt
ly_add_target(
    NAME AtomTutorials.Private.Object STATIC
    NAMESPACE Gem
    FILES_CMAKE
        atomtutorials_private_files.cmake
    TARGET_PROPERTIES
        O3DE_PRIVATE_TARGET TRUE
    INCLUDE_DIRECTORIES
        PRIVATE
            Include
            Source
    BUILD_DEPENDENCIES
        PUBLIC
            AZ::AzCore
            AZ::AzFramework
            AZ::AzToolsFramework
            Gem::AtomTutorials.API
            Gem::LmbrCentral.Static
            Gem::GradientSignal.Static
            Gem::SurfaceData.Static
            Gem::Atom_Feature_Common.Static
            Gem::Atom_Bootstrap.Headers
)

# Here add AtomTutorials target, it depends on the Private Object library and Public API interface
ly_add_target(
    NAME AtomTutorials ${PAL_TRAIT_MONOLITHIC_DRIVEN_MODULE_TYPE}
    NAMESPACE Gem
    FILES_CMAKE
        atomtutorials_shared_files.cmake
    INCLUDE_DIRECTORIES
        PUBLIC
            Include
        PRIVATE
            Source
    BUILD_DEPENDENCIES
        PUBLIC
            Gem::AtomTutorials.API
        PRIVATE
            Gem::AtomTutorials.Private.Object
    RUNTIME_DEPENDENCIES
        Gem::Atom_RPI.Private
        Gem::Atom_Feature_Common
)

# By default, we will specify that the above target AtomTutorials would be used by
# Client and Server type targets when this gem is enabled.  If you don't want it
# active in Clients or Servers by default, delete one of both of the following lines:
ly_create_alias(NAME AtomTutorials.Clients NAMESPACE Gem TARGETS Gem::AtomTutorials)
ly_create_alias(NAME AtomTutorials.Servers NAMESPACE Gem TARGETS Gem::AtomTutorials)

# For the Client and Server variants of AtomTutorials Gem, an alias to the AtomTutorials.API target will be made
ly_create_alias(NAME AtomTutorials.Clients.API NAMESPACE Gem TARGETS Gem::AtomTutorials.API)
ly_create_alias(NAME AtomTutorials.Servers.API NAMESPACE Gem TARGETS Gem::AtomTutorials.API)

# If we are on a host platform, we want to add the host tools targets like the AtomTutorials.Editor MODULE target
if(PAL_TRAIT_BUILD_HOST_TOOLS)

    # The AtomTutorials.Editor.Private.Object target is an internal target
    # which is only to be used by this gems CMakeLists.txt and any subdirectories
    # Other gems should not use this target
    ly_add_target(
        NAME AtomTutorials.Editor.Private.Object STATIC
        NAMESPACE Gem
        AUTOMOC
        AUTORCC
        FILES_CMAKE
            atomtutorials_editor_private_files.cmake
        TARGET_PROPERTIES
            O3DE_PRIVATE_TARGET TRUE
        INCLUDE_DIRECTORIES
            PRIVATE
                Include
                Source
        COMPILE_DEFINITIONS
            PRIVATE
                ATOMTUTORIALS_EDITOR
        BUILD_DEPENDENCIES
            PUBLIC
                AZ::AzToolsFramework
                Gem::AtomTutorials.Private.Object
                Gem::Atom_RPI.Edit
                Gem::AtomToolsFramework.Static
                Gem::AtomToolsFramework.Editor
                AZ::SceneCore
                AZ::SceneData
                Legacy::Editor.Headers
                Legacy::EditorCommon
                Legacy::CryCommon
    )

    ly_add_target(
        NAME AtomTutorials.Editor GEM_MODULE
        NAMESPACE Gem
        AUTOMOC
        FILES_CMAKE
            atomtutorials_shared_files.cmake
        INCLUDE_DIRECTORIES
            PRIVATE
                Source
            PUBLIC
                Include
        COMPILE_DEFINITIONS
            PRIVATE
                ATOMTUTORIALS_EDITOR
        BUILD_DEPENDENCIES
            PRIVATE
                Gem::AtomTutorials.Editor.Private.Object
        RUNTIME_DEPENDENCIES
            Gem::Atom_RPI.Editor
            Gem::Atom_Feature_Common.Editor
            Gem::AtomToolsFramework.Editor
            Legacy::EditorCommon
    )

    # By default, we will specify that the above target AtomTutorials would be used by
    # Tool and Builder type targets when this gem is enabled.  If you don't want it
    # active in Tools or Builders by default, delete one of both of the following lines:
    ly_create_alias(NAME AtomTutorials.Tools    NAMESPACE Gem
        TARGETS
            Gem::AtomTutorials.Editor 
            Gem::Atom_Feature_Common.Builders
            Gem::Atom_RPI.Builders
            Gem::GradientSignal.Builders
    )
    ly_create_alias(NAME AtomTutorials.Builders NAMESPACE Gem 
        TARGETS
            Gem::AtomTutorials.Editor
            Gem::GradientSignal.Tools
    )

endif()

################################################################################
# Tests
################################################################################
# See if globally, tests are supported
if(PAL_TRAIT_BUILD_TESTS_SUPPORTED)
    # We support AtomTutorials.Tests on this platform, add dependency on the Private Object target
    ly_add_target(
        NAME AtomTutorials.Tests ${PAL_TRAIT_TEST_TARGET_TYPE}
        NAMESPACE Gem
        FILES_CMAKE
            atomtutorials_tests_files.cmake
        INCLUDE_DIRECTORIES
            PRIVATE
                Tests
                Source
        BUILD_DEPENDENCIES
            PRIVATE
                AZ::AzTest
                AZ::AzFramework
                Gem::AtomTutorials.Private.Object
    )

    # Add AtomTutorials.Tests to googletest
    ly_add_googletest(
        NAME Gem::AtomTutorials.Tests
    )

    # If we are a host platform we want to add tools test like editor tests here
    if(PAL_TRAIT_BUILD_HOST_TOOLS)
        # We support AtomTutorials.Editor.Tests on this platform, add AtomTutorials.Editor.Tests target which depends on
        # private AtomTutorials.Editor.Private.Object target
        ly_add_target(
            NAME AtomTutorials.Editor.Tests ${PAL_TRAIT_TEST_TARGET_TYPE}
            NAMESPACE Gem
            FILES_CMAKE
                atomtutorials_editor_tests_files.cmake
            INCLUDE_DIRECTORIES
                PRIVATE
                    Tests
                    Source
            BUILD_DEPENDENCIES
                PRIVATE
                    AZ::AzTest
                    Gem::AtomTutorials.Private.Object
        )

        # Add AtomTutorials.Editor.Tests to googletest
        ly_add_googletest(
            NAME Gem::AtomTutorials.Editor.Tests
        )
    endif()
endif()
