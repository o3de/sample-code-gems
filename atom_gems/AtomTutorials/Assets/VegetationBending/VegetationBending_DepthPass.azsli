/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#pragma once

#include <viewsrg.srgi>
#include <scenesrg.srgi>

struct VegetationVSInput
{
    float3 m_position : POSITION;
    float3 m_normal : NORMAL;

    float4 m_optional_color : COLOR0;
};
 
struct VSDepthOutput
{
    precise float4 m_position : SV_Position;
};

VSDepthOutput DepthPassVS(VegetationVSInput IN)
{
    VSDepthOutput OUT;
 
    float4x4 objectToWorld = ObjectSrg::GetWorldMatrix();
    float4 worldPosition = mul(objectToWorld, float4(IN.m_position, 1.0));

    float currentTime = SceneSrg::m_time;
    worldPosition = ProcessBending(currentTime, IN.m_position, IN.m_normal, IN.m_optional_color, worldPosition, objectToWorld);

    OUT.m_position = mul(ViewSrg::m_viewProjectionMatrix, worldPosition);
    return OUT;
}